



OPSAWG                                                        Y. N. Here
Internet-Draft                                    Your Organization Here
Intended status: Informational                              27 June 2024
Expires: 29 December 2024


      A Framework for the Control Scheduling of Network Resources
           draft-wqk-opsawg-control-schedule-framework-latest

Abstract

   TODO Abstract

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 29 December 2024.

Copyright Notice

   Copyright (c) 2024 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Revised BSD License text as
   described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Revised BSD License.

Table of Contents

   1.  Introduction
   2.  Conventions and Definitions
     2.1.  Problem Statement
     2.2.  Background
   3.  Functional components
     3.1.  Scheduled Service Requester
     3.2.  Scheduled Service Responder
   4.  Architecture
     4.1.  Functional Interfaces
     4.2.  Data Sources
     4.3.  Synchronization
     4.4.  State Management
     4.5.  Policy and Enforcement
   5.  Applicable Models, Interfaces and Dependencies
     5.1.  YANG Data Models
     5.2.  Other Dependencies
   6.  Use Cases with detailed Code Examples
     6.1.  Scheduling OAM Tests (Attestation)
     6.2.  Time Variant Networking (Energy Efficient)
   7.  Manageability Considerations
   8.  Security Considerations
   9.  IANA Considerations
   10. References
     10.1.  Normative References
     10.2.  Informative References
   Acknowledgments
   Author's Address

1.  Introduction

   This document presents a comprehensive framework for the scheduled
   use of resources within network environments, utilizing the IETF YANG
   models designed for scheduling of network resources.

   The framework aims to show how the emerging IETF data models can
   streamline the management and orchestration of network events,
   policies, services, and resources based on precise date and time
   parameters.  By leveraging the defined YANG modules, this framework
   facilitates interoperable and efficient scheduling mechanisms that
   enhance the predictability, coordination, and optimization of network
   operations.

   The document also provides guidelines and best practices for
   implementing scheduling capabilities across diverse network
   architectures, ensuring that resources are allocated and utilized in
   a timely and effective manner.

   The document also outlines several challenges that must be considered
   when deploying control mechanisms for scheduling of network
   resources, including:

   *  Where and what scheduling state is held?

   *  How to apply policy and detect and resolve conflicts?

   *  Ensuring synchronization of scheduled resources across distributed
      systems

   *  Establishing a scalable and resilient scheduling system.

   *  How to ensure a scheduling system can scale to accommodate complex
      networks with numerous resources and scheduling requests?

   *  How to ensure the scheduling system remains operational and can
      recover from failures or disruptions, providing redundancy,
      failover mechanisms, and robust error handling.

   *  Security scheduled resources

   *  What mechanisms and policies could be applied to protect
      scheduling data and operations from unauthorized access and
      ensuring that only authorized entities can create, modify, or view
      schedules?

   This document presents a comprehensive framework that elucidates
   various scheduled resource scenarios and identifies the entities
   involved in requesting resource schedule changes.  It also addresses
   additional challenges such as conflict resolution, priority handling,
   and synchronization of scheduled tasks, ultimately enhancing the
   reliability and performance of network services.

2.  Conventions and Definitions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

2.1.  Problem Statement

   In modern network environments, the efficient and coordinated use of
   resources is paramount for maintaining optimal performance and
   reliability.  Networks are increasingly complex, supporting a wide
   array of services and applications that require precise timing and
   resource allocation.  Despite advancements in network technology,
   there is a notable lack of standardized mechanisms for scheduling
   resources based on specific date and time parameters.  This gap often
   leads to inefficiencies, conflicts, and suboptimal utilization of
   network capabilities.

   Currently, network administrators rely on disparate and often
   proprietary tools to manage scheduling for various network activities
   such as maintenance events, policy enforcement, and resource
   allocation.  These tools frequently operate in isolation, lacking
   interoperability and integration with other network management
   systems.  As a result, administrators face significant challenges in
   coordinating schedules, resolving conflicts, and ensuring that
   critical tasks are executed without disruption.  The absence of a
   unified scheduling framework exacerbates these issues, leading to
   increased operational overhead and potential service degradation.

   Furthermore, the dynamic nature of modern networks demands a flexible
   and adaptive scheduling solution that can respond to changing
   conditions and requirements.  Existing scheduling approaches are
   often rigid and static, unable to accommodate the fluid demands of
   network services and applications.  This rigidity hinders the ability
   to optimize resource use and respond proactively to network events,
   ultimately impacting the overall efficiency and effectiveness of
   network operations.

   To address these challenges, there is a clear need for a standardized
   framework that can provide a cohesive approach to scheduling network
   resources.  Such a framework should leverage existing YANG models to
   ensure compatibility and ease of integration with current network
   management practices.  By standardizing the scheduling process,
   network operators can achieve greater predictability, reduce
   conflicts, and optimize the use of network resources, thereby
   enhancing the performance and reliability of their networks.

2.2.  Background

   There is an existing framework [RFC8413] for the use of scheduled
   resources.  This document outlines a framework detailing the
   architecture for supporting the scheduled reservation of Traffic
   Engineering (TE) resources.  It focuses on the conceptual and
   architectural aspects, without delving into specific protocols or
   protocol extensions required to implement this service.

   More recently, the development of [I-D.ietf-netmod-schedule-yang],
   which provides a common schedule YANG module is designed to be
   applicable for scheduling purposes such as event, policy, services,
   or resources based on date and time.

   Along with with the common schedule YANG module, the document
   [I-D.ietf-opsawg-ucl-acl] introduces a YANG data model for policy-
   based network access control.  This model ensures consistent and
   efficient enforcement of network access control policies based on
   group identity.

   Combined, [I-D.ietf-netmod-schedule-yang] and
   [I-D.ietf-opsawg-ucl-acl] provide powerful tools for the control and
   scheduling of network resources for several use cases, including key
   examples outlined in this document.

3.  Functional components

3.1.  Scheduled Service Requester

   The entity requesting a resource schedule change can vary widely.
   For example, a network administrator may seek to restrict or limit
   access to specific network resources based on day or time to optimize
   performance and enhance security.

   Additionally, higher-layer OSS (Operations Support System) components
   may impose restrictions on network resources in response to changing
   network conditions, ensuring service continuity and compliance with
   operational policies.  Automated systems and AI-driven components can
   also request dynamic adjustments based on real-time data,
   facilitating predictive maintenance and optimizing resource usage to
   maintain peak network efficiency.

3.2.  Scheduled Service Responder

   The function of this central component is responsibility for managing
   and coordinating all network scheduling activities.  There are
   several sub-components within this entity, including:

   *  Resource Manager: Manages the network resources that are subject
      to scheduling.

   *  Schedule Manager: Handles creation, modification, and deletion of
      schedules.

   *  Conflict Resolver: Detects and resolves scheduling conflicts based
      on predefined policies and priorities.

   *  Policy Engine: Enforces scheduling policies and rules, ensuring
      compliance with organizational requirements.

   Examples of a schedule service responder may be a network controller,
   network management system or the network device itself.

4.  Architecture

             +-------------------------------------------------+
             |            Schedule Service Requester           |
             +-----+------------------------------------+------+
                   |                                    |
                   |Request                             |Response
                   |                                    |
             +-----+------------------------------------+------+
             |            Schedule Service Responder           |
             |                                                 |
             |   +---------+                     +---------+   |
             |   |         |                     |         |   |
             |   | Schedule|                     | Conflict|   |
             |   | Manager |                     | Resolver|   |
             |   |         |                     |         |   |
             |   +---------+                     +---------+   |
             |                                                 |
             |   +---------+                     +---------+   |
             |   |         |                     |         |   |
             |   | Resource|                     | Policy  |   |
             |   | Manager |                     | Engine  |   |
             |   |         |                     |         |   |
             |   +---------+                     +---------+   |
             |                                                 |
             +----------------------+--------------------------+
                                    |
                                    |
                                    |
                                    |
     +------------------------------+---------------------------------+
     |              Network Resources and Inventory                   |
     +----------------------------------------------------------------+

4.1.  Functional Interfaces

   To support the scheduling of network resources effectively, several
   functional interfaces are are required.  These interfaces facilitate
   communication between different components of the network scheduling
   system, ensuring seamless integration and operation, these include:

   *  Schedule Service Requestor API: Schedule resource creation,
      modification, and deletion requests and responses.  Querying of
      current and upcoming schedules, conflict and alert notifications.

   *  Schedule Service Responder to Network API: Manages interactions
      with the network resources and inventory systems.  Capable of
      querying available resources, allocating and deallocating
      resources based on current schedule plan, and monitoring resource
      utilization.

4.2.  Data Sources

   When scheduling network resources, a variety of data sources are
   required to accurately assess the network state and make informed
   scheduling decisions.  Here are examples data sources that will be
   required:

   *  Network Topology Information: Connection details about the
      physical and logical layout of the network, including nodes,
      ports/links, and interconnections.

   *  Network Resource Inventory: A comprehensive list of deployed
      network resources that are not currently in service, but may be
      availble if enabled.

   *  Current Network Utilization: Real-time data on the current usage
      of network resources, including bandwidth consumption, CPU load,
      memory usage, and power consumption.

   *  Historic Network Utilization: Past data on the current usage of
      network resources, including bandwidth consumption, CPU load,
      memory usage, and power consumption.

   *  Scheduled Maintenance and Planned Outages: Information on planned
      maintenance activities, scheduled downtimes, and service windows.

   It is critical to leverage these diverse data sources, so network
   administrators and automated systems can make well-informed
   scheduling decisions that optimize resource utilization, maintain
   network performance, and ensure service reliability.

4.3.  Synchronization

   It will be critical to ensure all network schedule entaties,
   including controllers and management systems are synchronized to a
   common time reference.  Several methods are availible to achieve
   this.

4.4.  State Management

   The scheduling state is maintained in the schedule manager, which is
   responsible for the creation, deletion, modification, and query of
   scheduling information.  Goupings "schedule-status" and "schedule-
   status-with-name" in the "ietf-schedule" yang module
   [I-D.ietf-netmod-schedule-yang] define common parameters for
   scheduling management/status exposure.

4.5.  Policy and Enforcement

   Policies are a set of rules to administer, manage, and control access
   to network resources.  For example, the following shows an example of
   a scheduled ACL policy:

drop TCP traffic source-port 16384 time 2025-12-01T08:00:00Z/2025-12-15T18:00:00Z

   A set of scheduling policies and rules are maintained in the policy
   engine, which is responsible for the policy enforcement.  Policies
   are triggered to execute at a certain time based on the scheduling
   prameters.  Each policy might be executed multiple times, depending
   on the its scheduling type (one-shot vs. recurrence).

5.  Applicable Models, Interfaces and Dependencies

5.1.  YANG Data Models

   This document is not intended to define any YANG modules, but shows
   how existing schedule-related YANG modules could fit into this
   framework.  The following provides a list of applicable YANG modules
   that can be used to exchange data between schedule service requester
   and responder:

   *  The "ietf-ucl-acl" YANG module defined in
      [I-D.ietf-opsawg-ucl-acl] augments the IETF ACL model [RFC8519]
      with schedule parameters to allow each access control entry (ACE)
      to be activated based on date and time conditions.

   *  The "ietf-tvr-node" YANG module in [I-D.ietf-tvr-schedule-yang]
      which works as a device model, is designed to manage a single node
      with scheduled attributes (e.g., powered on/off).

   *  The "ietf-tvr-topology" YANG module in
      [I-D.ietf-tvr-schedule-yang] is designed to manage the network
      topology with time-varying attributes (e.g., node/link
      availability, link bandwidth or delay).

   *  The "ietf-oam-unitary-test" in
      [I-D.contreras-opsawg-scheduling-oam-tests] is defined to perform
      scheduled network diagnosis using (Operations, Administration, and
      Maintenance) OAM unitary test.

   *  The "ietf-oam-test-sequence" in
      [I-D.contreras-opsawg-scheduling-oam-tests] is defined to perform
      a collection of OAM unitary tests based on date and time
      constraints.

   Additionally, [I-D.ietf-netmod-schedule-yang] defines "ietf-schedule"
   YANG module for scheduling that works as common building blocks for
   YANG modules described in Section 5.1.  The module doesn't define any
   protocol-accessible nodes but a set of reusable groupings applicable
   to be used in any scheduling contexts.

5.2.  Other Dependencies

   [Qiufang] and [Dan]

6.  Use Cases with detailed Code Examples

   [Qiufang] We just need one or two examples for first version.  We can
   provide detailed code examples to be added in future versions,
   assuming this is a useful document the working group would like to
   work on.

6.1.  Scheduling OAM Tests (Attestation)

   [Qiufang] Scheduled OAM Test Example

6.2.  Time Variant Networking (Energy Efficient)

   [Dan] Tidal Example The tidal network means the volume of traffic in
   the network changes periodically like the ocean tide.  This changes
   are mainly affected by human activities.  Therefore, this tidal
   effect is obvious in human-populated areas, such as campuses and
   airport.

   In the context of a tidal network, If the network maintains all the
   devices up to guarantee the maximum throughput all the time, a lot of
   power will be wasted.  The energy-saving methods may include the
   deactivation of some or all components of network nodes.  These
   activities have the potential to alter network topology and impact
   data routing in a variety of ways.  Ports on network nodes can be
   selectively disabled or enabled based on traffic patterns, thereby
   reducing the energy consumption of nodes during periods of low
   network traffic.

   Applicable YANG Models[TBD]

7.  Manageability Considerations

   [Dan] Basic management and operational considerations for 00 version.

8.  Security Considerations

   [Dan] Basic security text for 00 version.

9.  IANA Considerations

   This document has no IANA actions.

10.  References

10.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/rfc/rfc2119>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/rfc/rfc8174>.

10.2.  Informative References

   [I-D.contreras-opsawg-scheduling-oam-tests]
              Contreras, L. M. and V. Lopez, "A YANG Data Model for
              Network Diagnosis by scheduling sequences of OAM tests",
              Work in Progress, Internet-Draft, draft-contreras-opsawg-
              scheduling-oam-tests-01, 10 July 2023,
              <https://datatracker.ietf.org/doc/html/draft-contreras-
              opsawg-scheduling-oam-tests-01>.

   [I-D.ietf-netmod-schedule-yang]
              Ma, Q., Wu, Q., Boucadair, M., and D. King, "A Common YANG
              Data Model for Scheduling", Work in Progress, Internet-
              Draft, draft-ietf-netmod-schedule-yang-02, 25 June 2024,
              <https://datatracker.ietf.org/doc/html/draft-ietf-netmod-
              schedule-yang-02>.

   [I-D.ietf-opsawg-ucl-acl]
              Ma, Q., Wu, Q., Boucadair, M., and D. King, "A YANG Data
              Model and RADIUS Extension for Policy-based Network Access
              Control", Work in Progress, Internet-Draft, draft-ietf-
              opsawg-ucl-acl-05, 25 June 2024,
              <https://datatracker.ietf.org/doc/html/draft-ietf-opsawg-
              ucl-acl-05>.

   [I-D.ietf-tvr-schedule-yang]
              Qu, Y., Lindem, A., Kinzie, E., Fedyk, D., and M.
              Blanchet, "YANG Data Model for Scheduled Attributes", Work
              in Progress, Internet-Draft, draft-ietf-tvr-schedule-yang-
              00, 16 April 2024, <https://datatracker.ietf.org/doc/html/
              draft-ietf-tvr-schedule-yang-00>.

   [RFC8413]  Zhuang, Y., Wu, Q., Chen, H., and A. Farrel, "Framework
              for Scheduled Use of Resources", RFC 8413,
              DOI 10.17487/RFC8413, July 2018,
              <https://www.rfc-editor.org/rfc/rfc8413>.

   [RFC8519]  Jethanandani, M., Agarwal, S., Huang, L., and D. Blair,
              "YANG Data Model for Network Access Control Lists (ACLs)",
              RFC 8519, DOI 10.17487/RFC8519, March 2019,
              <https://www.rfc-editor.org/rfc/rfc8519>.

Acknowledgments

   TODO acknowledge.

Author's Address

   Your Name Here
   Your Organization Here
   Email: your.email@example.com
